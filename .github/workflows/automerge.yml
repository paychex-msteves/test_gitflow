name: Automerge

on:
  push:
    branches:
      - 'release/release_*'

jobs:
  merge_forward:
    name: Merges release branches back to develop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Merge
        shell: bash {0}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name 'Automerge'
          git config user.email 'msteves@paychex.com'
          
          source_branch=${GITHUB_REF}
          echo "Initial source branch - $source_branch"
          
          branches=(`git branch -r`)
          echo "Branches - ${branches[@]}"
          release_branches=$(printf -- '%s\n' "${branches[@]}" | grep release/release_* | sort | tr '\n' ' ')
          echo "Release branches - ${release_branches[@]}"
          
          for release_branch in ${release_branches[@]}
          do
            echo "Processing release branch $release_branch"
            if [ `echo $release_branch | cut -d _ -f 2` -le `echo ${GITHUB_REF} | cut -d _ -f 2` ]
            then
              echo "Release branch $release_branch is less than or equal to source release branch $source_branch - SKIPPING"
              continue
            fi
            
            local_release_branch=`echo $release_branch | cut -c 8-`
            
            echo "Checking out release branch $local_release_branch"
            git checkout $local_release_branch
            
            echo "Merging source branch $source_branch into branch $local_release_branch"
            git merge --no-ff $source_branch
            if [ $? -ne 0 ]
            then
              echo "Merge failed. Opening pull request."
              gh pr create --head $source_branch --base $local_release_branch --title "Automatic merge failure" --body "There was a merge conflict automatically merging this branch"
              exit 0
            else
              echo "Pushing commit"
              git push
            fi
            
            source_branch=$release_branch
            echo "Source branch set to $release_branch"
            
          done
          
          echo "Checking out develop"
          git checkout develop
          
          echo "Merging source branch $source_branch into branch develop"
          git merge --no-ff $source_branch
          if [ $? -ne 0 ]
          then
            echo "Merge failed. Opening pull request."
            gh pr create --head $source_branch --base develop --title "Automatic merge failure" --body "There was a merge conflict automatically merging this branch"
          else
            echo "Pushing commit"
            git push
          fi